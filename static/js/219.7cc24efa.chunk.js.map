{"version":3,"file":"static/js/219.7cc24efa.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.jsx","pages/ContactsPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin: 15px 0 0 0;\n    padding: 0;\n    width: 500px;\n    list-style: none;\n`\n\nexport const ContactsItemStyled = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 35px;\n`\n\nexport const TextStyle = styled.p`\n    margin: 0;\n    font-size: 20px;\n`\n\nexport const ButtonStyle = styled.button`\n    font-size: 14px;\n    padding: 5px;\n    border: none;\n    cursor: pointer;\n\n    border: 1px solid grey;\n    box-shadow: rgb(128 128 128 / 28%) 0px 0px 3px 5px;\n    background-color: #b3c6e5;\n`","import {\n  ContactsListStyled,\n  ContactsItemStyled,\n  ButtonStyle,\n  TextStyle,\n} from './Contacts.styled';\nimport { selectFilterContacts } from '../../redux/selectors';\nimport { useSelector } from 'react-redux/es/exports';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nfunction ContactList({ onDelete }) {\n  const contacts = useSelector(selectFilterContacts);\n  return (\n    <div>\n      <ContactsListStyled>\n        {contacts.map(({ id, name, phone }) => (\n          <ContactsItemStyled key={nanoid(4)}>\n            <TextStyle>\n              {name}: {phone}\n            </TextStyle>\n            <ButtonStyle type=\"button\" onClick={() => onDelete({ id })}>\n              Delete\n            </ButtonStyle>\n          </ContactsItemStyled>\n        ))}\n      </ContactsListStyled>\n    </div>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  onDelete: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyle = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 16px;\n    margin-left: auto;\n    margin-right: auto;\n    gap: 8px;\n    width: 400px;\n    border: 1px solid black;\n    box-shadow: rgb(128 128 128 / 28%) 0px 0px 3px 10px;\n`\n\nexport const LabelStyle = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    cursor: pointer;\n    font-weight: 700;\n`   \n\nexport const InputStyle = styled(Field)`\n    font-size: 14px;\n    margin-top: 8px;\n    padding: 8px;\n    width: 350px;\n`\n\nexport const ButtonStyle = styled.button`\n    font-size: 14px;\n    padding: 10px;\n    border: none;\n    font-weight: 700;\n    cursor: pointer;\n    border: 1px solid grey;\n    box-shadow: rgb(128 128 128 / 28%) 0px 0px 3px 5px;\n    background-color: #b3c6e5;\n`","import { selectContacts } from '../../redux/selectors';\nimport { addContacts } from '../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { FormStyle, LabelStyle, InputStyle, ButtonStyle } from './Form.styled';\nimport { Notify } from 'notiflix';\nimport { Formik } from 'formik';\n\nexport function FormInput() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    const contactInfo = {\n      name,\n      number,\n    };\n\n    if (contacts.find(contact => contact.name === name)) {\n      Notify.warning(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContacts(contactInfo));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n      <FormStyle>\n        <LabelStyle>\n          Name\n          <InputStyle\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </LabelStyle>\n        <LabelStyle>\n          Number\n          <InputStyle\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </LabelStyle>\n        <ButtonStyle type=\"submit\">Add contact</ButtonStyle>\n      </FormStyle>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-size: 16px;\n`\n\nexport const Input = styled.input`\n    font-size: 14px;\n    margin-top: 10px;\n    padding: 5px;\n    width: 400px;\n`","import { Label, Input } from './Filter.styled';\nimport { useDispatch } from 'react-redux/es/exports';\nimport { setNameFilter } from '../../redux/filterSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setNameFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input type=\"text\" name=\"name\" onChange={onFilterChange} />\n    </Label>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitleStyle = styled.h2`\n    font-size: 24px;\n`","import { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { selectIsLoading, selectError } from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContacts } from '../../redux/operations';\nimport ContactList from '../Contacts/Contacts';\nimport { FormInput } from '../Form/Form';\nimport Filter from '../Filter/Filter';\nimport Box from 'components/Box';\nimport { TitleStyle } from './Phonebook.styled';\n\nfunction Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = ({ id }) => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <Box\n      as={'section'}\n      m={40}\n      gridGap={16}\n      justifyContent=\"space-evenly\"\n      alignItems=\"flex-start\"\n    >\n      <div>\n        <TitleStyle>Add name and number</TitleStyle>\n        <FormInput />\n      </div>\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && <p>Loading...</p>}\n        {isError && (\n          <p style={{ color: 'red' }}>\n            404! Ooops, something broke. <br /> Please, reload the page and try\n            again...\n          </p>\n        )}\n        <ContactList onDelete={handleDelete} />\n      </div>\n    </Box>\n  );\n}\n\nexport default Phonebook;\n","import Phonebook from \"components/Phonebook/Phonebook\";\n\nfunction ContactsPage() {\n    return <Phonebook/>\n}\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterContacts","createSelector","filter","name","toLowerCase","includes","ContactsListStyled","styled","ContactsItemStyled","TextStyle","ButtonStyle","onDelete","useSelector","map","id","phone","type","onClick","nanoid","FormStyle","Form","LabelStyle","InputStyle","Field","FormInput","dispatch","useDispatch","initialValues","number","onSubmit","values","resetForm","contactInfo","find","contact","Notify","addContacts","pattern","title","required","Label","Input","onChange","e","setNameFilter","currentTarget","value","TitleStyle","isError","useEffect","fetchContacts","Box","as","m","gridGap","justifyContent","alignItems","style","color","deleteContacts"],"sourceRoot":""}